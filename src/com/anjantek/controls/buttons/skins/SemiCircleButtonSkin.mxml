<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

       @see spark.components.Button
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
             xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
             minWidth="21" minHeight="21" 
             alpha.disabled="0.5"
			 creationComplete="creationCompleteHandler(event)">
     
    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>
	
	
	<fx:Script>
		<![CDATA[
			import com.anjantek.controls.buttons.helpers.Arc;
			
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			import spark.components.Group;
			
			//-------------------------------------------------------------------------------------------------
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				trace("CC " + labelDisplay.text, width );
				displayArc();
			}
			
			//-------------------------------------------------------------------------------------------------
			
			private var cornerRadius:Number = 2;
			
			//-------------------------------------------------------------------------------------------------
			
			[Bindable]
			private var pathData:String = null;
			
			private function displayArc():void
			{
				const a1:Number = (-90) * (Math.PI / 180);
				const a2:Number = 90 * (Math.PI / 180);
				const arcRadius: Number = height / 2;
				const curves:Array = Arc.createArc(arcRadius, a1, a2);
				//trace("Curve Objects:\n" + ObjectUtil.toString( curves ) );
				
				// First draw the top line of the rectangle.
				const xCenter: Number = width;
				const yCenter: Number = arcRadius;
				
				pathData = "M 0 0" +
					"H " + width;
				
				// Draw the arc.
				for each (var curve:Object in curves)
				{
					if (!pathData)
						pathData =  "M " + (curve.x1 + xCenter) + " " + (curve.y1 + yCenter);
					
					pathData += 
						" C " + (curve.x2 + xCenter) + " " + (curve.y2 + yCenter) + 
						" " +   (curve.x3 + xCenter) + " " + (curve.y3 + yCenter) + 
						" " +   (curve.x4 + xCenter) + " " + (curve.y4 + yCenter); 
				}
				
				// Draw the remaining portion of the rectangle (bottom line and the left line).
				pathData += "H 0" +
					"V 0";
			}
			
			//-------------------------------------------------------------------------------------------------
			
		]]>
	</fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" />
        <s:State name="down" />
        <s:State name="disabled" />
    </s:states>
    
    <!-- layer 1: shadow -->
    <!--- @private -->
    <s:Path id="shadow" left="-1" right="-1" top="-1" bottom="-1" data="{ pathData }">
        <s:fill>
            <s:LinearGradient rotation="90">
                <s:GradientEntry color="0x000000" 
                                 color.down="0xFFFFFF"
                                 alpha="0.01"
                                 alpha.down="0" />
                <s:GradientEntry color="0x000000" 
                                 color.down="0xFFFFFF" 
                                 alpha="0.07"
                                 alpha.down="0.5" />
            </s:LinearGradient>
        </s:fill>
    </s:Path>
    
    <!-- layer 2: fill -->
    <!--- @private -->
    <s:Path id="fill" left="1" right="1" top="1" bottom="1" data="{ pathData }">
        <s:fill>
            <s:LinearGradient rotation="90">
                <s:GradientEntry color="0xFFFFFF" 
                                 color.over="0xBBBDBD" 
                                 color.down="0xAAAAAA" 
                                 alpha="0.85" />
                <s:GradientEntry color="0xD8D8D8" 
                                 color.over="0x9FA0A1" 
                                 color.down="0x929496" 
                                 alpha="0.85" />
            </s:LinearGradient>
        </s:fill>
    </s:Path>

    <!-- layer 3: fill lowlight -->
    <!--- @private -->
    <s:Path id="lowlight" left="1" right="1" top="1" bottom="1" data="{ pathData }">
        <s:fill>
            <s:LinearGradient rotation="270">
                <s:GradientEntry color="0x000000" ratio="0.0" alpha="0.0627" />
                <s:GradientEntry color="0x000000" ratio="0.48" alpha="0.0099" />
                <s:GradientEntry color="0x000000" ratio="0.48001" alpha="0" />
            </s:LinearGradient>
        </s:fill>
    </s:Path>
    
    <!-- layer 4: fill highlight -->
    <!--- @private -->
    <s:Path id="highlight" left="1" right="1" top="1" bottom="1" data="{ pathData }">
        <s:fill>
            <s:LinearGradient rotation="90">
                <s:GradientEntry color="0xFFFFFF"
                                 ratio="0.0"
                                 alpha="0.33" 
                                 alpha.over="0.22" 
                                 alpha.down="0.12"/>
                <s:GradientEntry color="0xFFFFFF"
                                 ratio="0.48"
                                 alpha="0.33"
                                 alpha.over="0.22"
                                 alpha.down="0.12" />
                <s:GradientEntry color="0xFFFFFF"
                                 ratio="0.48001"
                                 alpha="0" />
            </s:LinearGradient>
        </s:fill>
    </s:Path>
    
    <!-- layer 5: highlight stroke (all states except down) -->
    <!--- @private -->
    <s:Path id="highlightStroke" left="1" right="1" top="1" bottom="1" data="{ pathData }" excludeFrom="down">
        <s:stroke>
            <s:LinearGradientStroke rotation="90" weight="1">
                <s:GradientEntry color="0xFFFFFF" alpha.over="0.22" />
                <s:GradientEntry color="0xD8D8D8" alpha.over="0.22" />
            </s:LinearGradientStroke>
        </s:stroke>
    </s:Path>
    
    <!-- layer 6: highlight stroke (down state only) -->
    <!--- @private -->
    <s:Path id="hldownstroke1" left="1" right="1" top="1" bottom="1" data="{ pathData }" includeIn="down">
        <s:stroke>
            <s:LinearGradientStroke rotation="90" weight="1">
                <s:GradientEntry color="0x000000" alpha="0.25" ratio="0.0" />
                <s:GradientEntry color="0x000000" alpha="0.25" ratio="0.001" />
                <s:GradientEntry color="0x000000" alpha="0.07" ratio="0.0011" />
                <s:GradientEntry color="0x000000" alpha="0.07" ratio="0.965" />
                <s:GradientEntry color="0x000000" alpha="0.00" ratio="0.9651" />
            </s:LinearGradientStroke>
        </s:stroke>
    </s:Path>
    <!--- @private -->
    <s:Path id="hldownstroke2" left="2" right="2" top="2" bottom="2" data="{ pathData }" includeIn="down">
        <s:stroke>
            <s:LinearGradientStroke rotation="90" weight="1">
                <s:GradientEntry color="0x000000" alpha="0.09" ratio="0.0" />
                <s:GradientEntry color="0x000000" alpha="0.00" ratio="0.0001" />
            </s:LinearGradientStroke>
        </s:stroke>
    </s:Path>

    <!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
    <!--- @private -->
    <s:Path id="border" left="0" right="0" top="0" bottom="0" width="69" height="20" data="{ pathData }">
        <s:stroke>
            <s:LinearGradientStroke rotation="90" weight="1">
                <s:GradientEntry color="0x000000" 
                                 alpha="0.5625"
                                 alpha.down="0.6375" />
                <s:GradientEntry color="0x000000" 
                                 alpha="0.75" 
                                 alpha.down="0.85" />
            </s:LinearGradientStroke>
        </s:stroke>
    </s:Path>
    
    <!-- layer 8: text -->
	<s:Label id="labelDisplay"
			 textAlign="center"
			 maxDisplayedLines="1"
			 horizontalCenter="0" verticalCenter="1" verticalAlign="middle"
			 top="2" bottom="2">
	</s:Label>
    
    
</s:SparkButtonSkin>
